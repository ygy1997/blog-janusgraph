{"remainingRequest":"D:\\blog-nebula-vue.js\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\blog-nebula-vue.js\\src\\pages\\content\\graph\\3dForeceGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\blog-nebula-vue.js\\src\\pages\\content\\graph\\3dForeceGraph.vue","mtime":1607455630356},{"path":"D:\\blog-nebula-vue.js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607260979907},{"path":"D:\\blog-nebula-vue.js\\node_modules\\babel-loader\\lib\\index.js","mtime":1607260979458},{"path":"D:\\blog-nebula-vue.js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607260979907},{"path":"D:\\blog-nebula-vue.js\\node_modules\\vue-loader\\lib\\index.js","mtime":1607260990254}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport ForceGraph3D from '3d-force-graph';\n\nexport default {\n\tcomponents: {\n\n\t},\n\tdata() {\n\t\treturn {\n\n\t\t}\n\t},\n\tcreated() {\n\t\tvar _this = this\n\t\tthis.$nextTick(() => {\n\t\t\t_this.graphInit()\n\t\t})\n\t},\n\tmethods: {\n\t\tasync graphInit() {\n\t\t\tconst N = 300;\n\t\t\tconst gData = {\n\t\t\t  nodes: [...Array(N).keys()].map(i => ({ id: i })),\n\t\t\t  links: [...Array(N).keys()]\n\t\t\t\t.filter(id => id)\n\t\t\t\t.map(id => ({\n\t\t\t\t  source: id,\n\t\t\t\t  target: Math.round(Math.random() * (id-1))\n\t\t\t\t}))\n\t\t\t};\n\t\t\tconst Graph = ForceGraph3D()\n\t\t\t  (document.getElementById('container'))\n\t\t\t\t.graphData(gData);\n\t\t\tGraph.backgroundColor('#000')\n\t\t}\n\t}\n}\n",{"version":3,"sources":["3dForeceGraph.vue"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"3dForeceGraph.vue","sourceRoot":"src/pages/content/graph","sourcesContent":["<template>\r\n\t<div class=\"templatemo-content-container\">\r\n\t\t<div id=\"container\" >\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport ForceGraph3D from '3d-force-graph';\r\n\r\n\texport default {\r\n\t\tcomponents: {\r\n\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tvar _this = this\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t_this.graphInit()\r\n\t\t\t})\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tasync graphInit() {\r\n\t\t\t\tconst N = 300;\r\n\t\t\t\tconst gData = {\r\n\t\t\t\t  nodes: [...Array(N).keys()].map(i => ({ id: i })),\r\n\t\t\t\t  links: [...Array(N).keys()]\r\n\t\t\t\t\t.filter(id => id)\r\n\t\t\t\t\t.map(id => ({\r\n\t\t\t\t\t  source: id,\r\n\t\t\t\t\t  target: Math.round(Math.random() * (id-1))\r\n\t\t\t\t\t}))\r\n\t\t\t\t};\r\n\t\t\t\tconst Graph = ForceGraph3D()\n\t\t\t\t  (document.getElementById('container'))\n\t\t\t\t\t.graphData(gData);\r\n\t\t\t\tGraph.backgroundColor('#000')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped=\"graph\">\r\n@import url(\"./graph.css\");\r\n</style>"]}]}