{"version":3,"sources":["../../src/camera/Camera.ts"],"names":["CAMERA_TYPE","CAMERA_TRACKING_MODE","CAMERA_PROJECTION_MODE","DEG_2_RAD","Math","PI","RAD_2_DEG","Camera","IDENTIFIER","InteractorService","matrix","mat4","create","right","vec3","fromValues","up","forward","position","focalPoint","distanceVector","distance","azimuth","elevation","roll","relAzimuth","relElevation","relRoll","dollyingStep","rotateWorld","fov","near","far","aspect","left","rright","top","bottom","zoom","perspective","view","following","undefined","type","EXPLORING","trackingMode","DEFAULT","projectionMode","PERSPECTIVE","frustum","Frustum","landmarks","landmarkAnimationID","camera","setType","interactor","setWorldRotation","_getAngles","TRACKING","setTrackingMode","Error","flag","invert","_update","setPerspective","fullWidth","fullHeight","x","y","width","height","enabled","offsetX","offsetY","setOrthographic","l","r","t","b","ORTHOGRAPHIC","dx","dy","cx","cy","scaleW","scaleH","ortho","z","_setPosition","setFocalPoint","CINEMATIC","d","subtract","length","el","asin","az","atan2","m","rotateY","rotateX","transformMat4","lookAt","_getAxes","_getDistance","pos","n","f","setAzimuth","setElevation","rl","setRoll","computeMatrix","ORBITING","_getPosition","_getFocalPoint","angle","rotX","quat","setAxisAngle","rotY","rotZ","rotQ","multiply","rotMatrix","fromQuat","translate","abs","tx","ty","coords","clone","add","scale","value","step","name","params","setPosition","landmark","Landmark","push","duration","find","retrieve","window","cancelAnimationFrame","disconnect","destPosition","getPosition","destFocalPoint","getFocalPoint","destRoll","getRoll","timeStart","animate","timestamp","elapsed","cos","interFocalPoint","interPosition","interRoll","lerp","dist","connect","requestAnimationFrame","identity","copy","vec4","normalize","transformMat3","mat3","fromMat4"],"mappings":"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","sourcesContent":["import {\n  Frustum,\n  ICamera,\n  IDENTIFIER,\n  IInteractorService,\n} from '@antv/g-webgpu-core';\nimport { mat3, mat4, quat, vec3, vec4 } from 'gl-matrix';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { createVec3, getAngle } from '../utils/math';\nimport Landmark from './Landmark';\n\nexport enum CAMERA_TYPE {\n  ORBITING = 'ORBITING',\n  EXPLORING = 'EXPLORING',\n  TRACKING = 'TRACKING',\n}\n\nexport enum CAMERA_TRACKING_MODE {\n  DEFAULT = 'DEFAULT',\n  ROTATIONAL = 'ROTATIONAL',\n  TRANSLATIONAL = 'TRANSLATIONAL',\n  CINEMATIC = 'CINEMATIC',\n}\n\nexport enum CAMERA_PROJECTION_MODE {\n  ORTHOGRAPHIC = 'ORTHOGRAPHIC',\n  PERSPECTIVE = 'PERSPECTIVE',\n}\n\nconst DEG_2_RAD = Math.PI / 180;\nconst RAD_2_DEG = 180 / Math.PI;\n\n/**\n * 参考「WebGL Insights - 23.Designing Cameras for WebGL Applications」，基于 Responsible Camera 思路设计\n * 保存相机参数，定义相机动作：\n * 1. dolly 沿 n 轴移动\n * 2. pan 沿 u v 轴移动\n * 3. rotate 以方位角旋转\n * 4. 移动到 Landmark，具有平滑的动画效果，其间禁止其他用户交互\n */\n@injectable()\nexport class Camera implements ICamera {\n  /**\n   * 相机矩阵\n   */\n  public matrix = mat4.create();\n\n  /**\n   * u 轴\n   * @see http://learnwebgl.brown37.net/07_cameras/camera_introduction.html#a-camera-definition\n   */\n  public right = vec3.fromValues(1, 0, 0);\n\n  /**\n   * v 轴\n   */\n  public up = vec3.fromValues(0, 1, 0);\n\n  /**\n   * n 轴\n   */\n  public forward = vec3.fromValues(0, 0, 1);\n\n  /**\n   * 相机位置\n   */\n  public position = vec3.fromValues(0, 0, 1);\n\n  /**\n   * 视点位置\n   */\n  public focalPoint = vec3.fromValues(0, 0, 0);\n\n  /**\n   * 相机位置到视点向量\n   * focalPoint - position\n   */\n  public distanceVector = vec3.fromValues(0, 0, 0);\n\n  /**\n   * 相机位置到视点距离\n   * length(focalPoint - position)\n   */\n  public distance = 1;\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Azimuth\n   */\n  public azimuth = 0;\n  public elevation = 0;\n  public roll = 0;\n  public relAzimuth = 0;\n  public relElevation = 0;\n  public relRoll = 0;\n\n  /**\n   * 沿 n 轴移动时，保证移动速度从快到慢\n   */\n  public dollyingStep = 0;\n\n  /**\n   * invert the horizontal coordinate system HCS\n   */\n  public rotateWorld = false;\n\n  @inject(IDENTIFIER.InteractorService)\n  public interactor: IInteractorService;\n\n  /**\n   * 投影矩阵参数\n   */\n\n  /**\n   * field of view [0-360]\n   * @see http://en.wikipedia.org/wiki/Angle_of_view\n   */\n  private fov = 30;\n  private near = 0.1;\n  private far = 10000;\n  private aspect = 1;\n  private left: number;\n  private rright: number;\n  private top: number;\n  private bottom: number;\n  private zoom = 1;\n  private perspective = mat4.create();\n\n  private view:\n    | {\n        enabled: boolean;\n        fullWidth: number;\n        fullHeight: number;\n        offsetX: number;\n        offsetY: number;\n        width: number;\n        height: number;\n      }\n    | undefined;\n\n  private following = undefined;\n\n  private type = CAMERA_TYPE.EXPLORING;\n  private trackingMode = CAMERA_TRACKING_MODE.DEFAULT;\n  private projectionMode = CAMERA_PROJECTION_MODE.PERSPECTIVE;\n\n  /**\n   * for culling use\n   */\n  private frustum: Frustum = new Frustum();\n\n  /**\n   * switch between multiple landmarks\n   */\n  private landmarks: Landmark[] = [];\n  private landmarkAnimationID: number | undefined;\n\n  public clone(): Camera {\n    const camera = new Camera();\n    camera.setType(this.type, undefined);\n    camera.interactor = this.interactor;\n    return camera;\n  }\n\n  public getPerspective() {\n    return this.perspective;\n  }\n\n  public getFrustum() {\n    return this.frustum;\n  }\n\n  public getPosition() {\n    return this.position;\n  }\n\n  public setType(\n    type: CAMERA_TYPE,\n    trackingMode: CAMERA_TRACKING_MODE | undefined,\n  ) {\n    this.type = type;\n    if (this.type === CAMERA_TYPE.EXPLORING) {\n      this.setWorldRotation(true);\n    } else {\n      this.setWorldRotation(false);\n    }\n    this._getAngles();\n\n    if (this.type === CAMERA_TYPE.TRACKING && trackingMode !== undefined) {\n      this.setTrackingMode(trackingMode);\n    }\n    return this;\n  }\n\n  public setProjectionMode(projectionMode: CAMERA_PROJECTION_MODE) {\n    this.projectionMode = projectionMode;\n    return this;\n  }\n\n  public setTrackingMode(trackingMode: CAMERA_TRACKING_MODE) {\n    if (this.type !== CAMERA_TYPE.TRACKING) {\n      throw new Error(\n        'Impossible to set a tracking mode if the camera is not of tracking type',\n      );\n    }\n    this.trackingMode = trackingMode;\n    return this;\n  }\n\n  /**\n   * If flag is true, it reverses the azimuth and elevation angles.\n   * Subsequent calls to rotate, setAzimuth, setElevation,\n   * changeAzimuth or changeElevation will cause the inverted effect.\n   * setRoll or changeRoll is not affected by this method.\n   *\n   * This inversion is useful when one wants to simulate that the world\n   * is moving, instead of the camera.\n   *\n   * By default the camera angles are not reversed.\n   * @param {Boolean} flag the boolean flag to reverse the angles.\n   */\n  public setWorldRotation(flag: boolean) {\n    this.rotateWorld = flag;\n    this._getAngles();\n  }\n\n  /**\n   * 计算 MV 矩阵，为相机矩阵的逆矩阵\n   */\n  public getViewTransform(): mat4 {\n    return mat4.invert(mat4.create(), this.matrix)!;\n  }\n\n  /**\n   * 设置相机矩阵\n   */\n  public setMatrix(matrix: mat4) {\n    this.matrix = matrix;\n    this._update();\n    return this;\n  }\n\n  public setAspect(aspect: number) {\n    this.setPerspective(this.near, this.far, this.fov, aspect);\n    return this;\n  }\n\n  /**\n   * Sets an offset in a larger frustum, used in PixelPicking\n   */\n  public setViewOffset(\n    fullWidth: number,\n    fullHeight: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  ) {\n    this.aspect = fullWidth / fullHeight;\n    if (this.view === undefined) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1,\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n\n    if (this.projectionMode === CAMERA_PROJECTION_MODE.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(\n        this.left,\n        this.rright,\n        this.top,\n        this.bottom,\n        this.near,\n        this.far,\n      );\n    }\n    return this;\n  }\n\n  public clearViewOffset() {\n    if (this.view !== undefined) {\n      this.view.enabled = false;\n    }\n\n    if (this.projectionMode === CAMERA_PROJECTION_MODE.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(\n        this.left,\n        this.rright,\n        this.top,\n        this.bottom,\n        this.near,\n        this.far,\n      );\n    }\n    return this;\n  }\n\n  public setPerspective(\n    near: number,\n    far: number,\n    fov: number,\n    aspect: number,\n  ) {\n    this.projectionMode = CAMERA_PROJECTION_MODE.PERSPECTIVE;\n    this.fov = fov;\n    this.near = near;\n    this.far = far;\n    this.aspect = aspect;\n    mat4.perspective(\n      this.perspective,\n      this.fov * DEG_2_RAD,\n      this.aspect,\n      this.near,\n      this.far,\n    );\n    return this;\n  }\n\n  public setOrthographic(\n    l: number,\n    r: number,\n    t: number,\n    b: number,\n    near: number,\n    far: number,\n  ) {\n    this.projectionMode = CAMERA_PROJECTION_MODE.ORTHOGRAPHIC;\n    this.rright = r;\n    this.left = l;\n    this.top = t;\n    this.bottom = b;\n    this.near = near;\n    this.far = far;\n\n    const dx = (this.rright - this.left) / (2 * this.zoom);\n    const dy = (this.top - this.bottom) / (2 * this.zoom);\n    const cx = (this.rright + this.left) / 2;\n    const cy = (this.top + this.bottom) / 2;\n\n    let left = cx - dx;\n    let right = cx + dx;\n    let top = cy + dy;\n    let bottom = cy - dy;\n\n    if (this.view !== undefined && this.view.enabled) {\n      const scaleW =\n        (this.rright - this.left) / this.view.fullWidth / this.zoom;\n      const scaleH =\n        (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\n      left += scaleW * this.view.offsetX;\n      right = left + scaleW * this.view.width;\n      top -= scaleH * this.view.offsetY;\n      bottom = top - scaleH * this.view.height;\n    }\n\n    mat4.ortho(this.perspective, left, right, top, bottom, near, far);\n    return this;\n  }\n\n  /**\n   * 设置相机位置\n   */\n  public setPosition(x: number | vec3, y?: number, z?: number) {\n    this._setPosition(x, y, z);\n    this.setFocalPoint(this.focalPoint);\n    return this;\n  }\n\n  /**\n   * 设置视点位置\n   */\n  public setFocalPoint(x: number | vec3, y?: number, z?: number) {\n    let up = vec3.fromValues(0, 1, 0);\n    this.focalPoint = createVec3(x, y, z);\n\n    if (this.trackingMode === CAMERA_TRACKING_MODE.CINEMATIC) {\n      const d = vec3.subtract(vec3.create(), this.focalPoint, this.position);\n      x = d[0];\n      y = d[1] as number;\n      z = d[2] as number;\n      const r = vec3.length(d);\n      const el = Math.asin(y / r) * RAD_2_DEG;\n      const az = 90 + Math.atan2(z, x) * RAD_2_DEG;\n      const m = mat4.create();\n      mat4.rotateY(m, m, az * DEG_2_RAD);\n      mat4.rotateX(m, m, el * DEG_2_RAD);\n      up = vec3.transformMat4(vec3.create(), [0, 1, 0], m);\n    }\n\n    mat4.invert(\n      this.matrix,\n      mat4.lookAt(mat4.create(), this.position, this.focalPoint, up),\n    );\n\n    this._getAxes();\n    this._getDistance();\n    this._getAngles();\n    return this;\n  }\n\n  /**\n   * 固定当前视点，按指定距离放置相机\n   */\n  public setDistance(d: number) {\n    if (this.distance === d || d < 0) {\n      return;\n    }\n\n    this.distance = d;\n\n    if (this.distance < 0.0002) {\n      this.distance = 0.0002;\n    }\n    this.dollyingStep = this.distance / 100;\n\n    const pos = vec3.create();\n    d = this.distance;\n    const n = this.forward;\n    const f = this.focalPoint;\n\n    pos[0] = d * n[0] + f[0];\n    pos[1] = d * n[1] + f[1];\n    pos[2] = d * n[2] + f[2];\n\n    this._setPosition(pos);\n    return this;\n  }\n\n  /**\n   * Changes the initial azimuth of the camera\n   */\n  public changeAzimuth(az: number) {\n    this.setAzimuth(this.azimuth + az);\n    return this;\n  }\n\n  /**\n   * Changes the initial elevation of the camera\n   */\n  public changeElevation(el: number) {\n    this.setElevation(this.elevation + el);\n    return this;\n  }\n\n  /**\n   * Changes the initial roll of the camera\n   */\n  public changeRoll(rl: number) {\n    this.setRoll(this.roll + rl);\n    return this;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} el the azimuth in degrees\n   */\n  public setAzimuth(az: number) {\n    this.azimuth = getAngle(az);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  public getAzimuth() {\n    return this.azimuth;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} el the elevation in degrees\n   */\n  public setElevation(el: number) {\n    this.elevation = getAngle(el);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} angle the roll angle\n   */\n  public setRoll(angle: number) {\n    this.roll = getAngle(angle);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  /**\n   * Changes the azimuth and elevation with respect to the current camera axes\n   * @param {Number} azimuth the relative azimuth\n   * @param {Number} elevation the relative elevation\n   * @param {Number} roll the relative roll\n   */\n  public rotate(azimuth: number, elevation: number, roll: number) {\n    if (this.type === CAMERA_TYPE.EXPLORING) {\n      azimuth = getAngle(azimuth);\n      elevation = getAngle(elevation);\n      roll = getAngle(roll);\n\n      const rotX = quat.setAxisAngle(\n        quat.create(),\n        [1, 0, 0],\n        (this.rotateWorld ? 1 : -1) * elevation * DEG_2_RAD,\n      );\n      const rotY = quat.setAxisAngle(\n        quat.create(),\n        [0, 1, 0],\n        (this.rotateWorld ? 1 : -1) * azimuth * DEG_2_RAD,\n      );\n\n      const rotZ = quat.setAxisAngle(\n        quat.create(),\n        [0, 0, 1],\n        roll * DEG_2_RAD,\n      );\n      let rotQ = quat.multiply(quat.create(), rotY, rotX);\n      rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n      const rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n      mat4.translate(this.matrix, this.matrix, [0, 0, -this.distance]);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else {\n      if (Math.abs(this.elevation + elevation) > 90) {\n        return;\n      }\n      this.relElevation = getAngle(elevation);\n      this.relAzimuth = getAngle(azimuth);\n      this.relRoll = getAngle(roll);\n      this.elevation += this.relElevation;\n      this.azimuth += this.relAzimuth;\n      this.roll += this.relRoll;\n\n      this.computeMatrix();\n    }\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this._update();\n    return this;\n  }\n\n  /**\n   * 沿水平(right) & 垂直(up)平移相机\n   */\n  public pan(tx: number, ty: number) {\n    const coords = createVec3(tx, ty, 0);\n    const pos = vec3.clone(this.position);\n\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.right, coords[0]));\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.up, coords[1]));\n\n    this._setPosition(pos);\n\n    return this;\n  }\n\n  /**\n   * 沿 n 轴移动，当距离视点远时移动速度较快，离视点越近速度越慢\n   */\n  public dolly(value: number) {\n    const n = this.forward;\n    const pos = vec3.clone(this.position);\n    const step = value * this.dollyingStep;\n    pos[0] += step * n[0];\n    pos[1] += step * n[1];\n    pos[2] += step * n[2];\n\n    this._setPosition(pos);\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      // 重新计算视点距离\n      this._getDistance();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      // 保持视距，移动视点位置\n      vec3.add(this.focalPoint, pos, this.distanceVector);\n    }\n    return this;\n  }\n\n  public createLandmark(\n    name: string,\n    params: {\n      position: vec3;\n      focalPoint: vec3;\n      roll?: number;\n    },\n  ): Landmark {\n    const camera = this.clone();\n    camera.setPosition(params.position);\n    camera.setFocalPoint(params.focalPoint);\n    if (params.roll !== undefined) {\n      camera.setRoll(params.roll);\n    }\n    const landmark = new Landmark(name, camera);\n    this.landmarks.push(landmark);\n    return landmark;\n  }\n\n  public setLandmark(name: string) {\n    const landmark = new Landmark(name, this);\n    this.landmarks.push(landmark);\n    return this;\n  }\n\n  public gotoLandmark(name: string, duration: number = 1000) {\n    const landmark = this.landmarks.find((l) => l.name === name);\n    if (landmark) {\n      if (duration === 0) {\n        landmark.retrieve(this);\n        return;\n      }\n\n      if (this.landmarkAnimationID !== undefined) {\n        window.cancelAnimationFrame(this.landmarkAnimationID);\n      }\n\n      // TODO: do not process events during animation\n      this.interactor.disconnect();\n\n      const destPosition = landmark.getPosition();\n      const destFocalPoint = landmark.getFocalPoint();\n      const destRoll = landmark.getRoll();\n\n      let timeStart: number | undefined;\n      const animate = (timestamp: number) => {\n        if (timeStart === undefined) {\n          timeStart = timestamp;\n        }\n        const elapsed = timestamp - timeStart;\n        // TODO: use better ease function\n        const t = (1 - Math.cos((elapsed / duration) * Math.PI)) / 2;\n\n        const interFocalPoint = vec3.create();\n        const interPosition = vec3.create();\n        let interRoll = 0;\n\n        vec3.lerp(interFocalPoint, this.focalPoint, destFocalPoint, t);\n        vec3.lerp(interPosition, this.position, destPosition, t);\n        interRoll = this.roll * (1 - t) + destRoll * t;\n\n        this.setFocalPoint(interFocalPoint);\n        this.setPosition(interPosition);\n        this.setRoll(interRoll);\n        this.computeMatrix();\n\n        const dist =\n          vec3.dist(interFocalPoint, destFocalPoint) +\n          vec3.dist(interPosition, destPosition);\n        if (dist > 0.01) {\n          //\n        } else {\n          this.setFocalPoint(interFocalPoint);\n          this.setPosition(interPosition);\n          this.setRoll(interRoll);\n          this.computeMatrix();\n          this.interactor.connect();\n          return;\n        }\n\n        if (elapsed < duration) {\n          this.landmarkAnimationID = window.requestAnimationFrame(animate);\n        }\n      };\n\n      window.requestAnimationFrame(animate);\n    }\n  }\n\n  /**\n   * 根据相机矩阵重新计算各种相机参数\n   */\n  private _update() {\n    this._getAxes();\n    this._getPosition();\n    this._getDistance();\n    this._getAngles();\n  }\n\n  /**\n   * 计算相机矩阵\n   */\n  private computeMatrix() {\n    let rotX;\n    let rotY;\n    // 使用四元数描述 3D 旋转\n    // @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n    const rotZ = quat.setAxisAngle(\n      quat.create(),\n      [0, 0, 1],\n      this.roll * DEG_2_RAD,\n    );\n\n    mat4.identity(this.matrix);\n\n    // only consider HCS for EXPLORING and ORBITING cameras\n    rotX = quat.setAxisAngle(\n      quat.create(),\n      [1, 0, 0],\n      ((this.rotateWorld && this.type !== CAMERA_TYPE.TRACKING) ||\n      this.type === CAMERA_TYPE.TRACKING\n        ? 1\n        : -1) *\n        this.elevation *\n        DEG_2_RAD,\n    );\n    rotY = quat.setAxisAngle(\n      quat.create(),\n      [0, 1, 0],\n      ((this.rotateWorld && this.type !== CAMERA_TYPE.TRACKING) ||\n      this.type === CAMERA_TYPE.TRACKING\n        ? 1\n        : -1) *\n        this.azimuth *\n        DEG_2_RAD,\n    );\n\n    let rotQ = quat.multiply(quat.create(), rotY, rotX);\n    rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n    const rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      mat4.translate(this.matrix, this.matrix, this.focalPoint);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      mat4.translate(this.matrix, this.matrix, this.position);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n    }\n  }\n\n  /**\n   * Sets the camera position in the camera matrix\n   */\n  private _setPosition(x: number | vec3, y?: number, z?: number) {\n    this.position = createVec3(x, y, z);\n    const m = this.matrix;\n    m[12] = this.position[0];\n    m[13] = this.position[1];\n    m[14] = this.position[2];\n    m[15] = 1;\n  }\n\n  /**\n   * Recalculates axes based on the current matrix\n   */\n  private _getAxes() {\n    vec3.copy(\n      this.right,\n      createVec3(vec4.transformMat4(vec4.create(), [1, 0, 0, 0], this.matrix)),\n    );\n    vec3.copy(\n      this.up,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 1, 0, 0], this.matrix)),\n    );\n    vec3.copy(\n      this.forward,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 0, 1, 0], this.matrix)),\n    );\n    vec3.normalize(this.right, this.right);\n    vec3.normalize(this.up, this.up);\n    vec3.normalize(this.forward, this.forward);\n  }\n\n  /**\n   * Recalculates euler angles based on the current state\n   */\n  private _getAngles() {\n    // Recalculates angles\n    const x = this.distanceVector[0];\n    const y = this.distanceVector[1];\n    const z = this.distanceVector[2];\n    const r = vec3.length(this.distanceVector);\n\n    // FAST FAIL: If there is no distance we cannot compute angles\n    if (r === 0) {\n      this.elevation = 0;\n      this.azimuth = 0;\n      return;\n    }\n\n    if (this.type === CAMERA_TYPE.TRACKING) {\n      this.elevation = Math.asin(y / r) * RAD_2_DEG;\n      this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n    } else {\n      if (this.rotateWorld) {\n        this.elevation = Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n      } else {\n        this.elevation = -Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = -Math.atan2(-x, -z) * RAD_2_DEG;\n      }\n    }\n  }\n\n  /**\n   * 重新计算相机位置，只有 ORBITING 模式相机位置才会发生变化\n   */\n  private _getPosition() {\n    vec3.copy(\n      this.position,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 0, 0, 1], this.matrix)),\n    );\n\n    // 相机位置变化，需要重新计算视距\n    this._getDistance();\n  }\n\n  /**\n   * 重新计算视点，只有 TRACKING 模式视点才会发生变化\n   */\n  private _getFocalPoint() {\n    vec3.transformMat3(\n      this.distanceVector,\n      [0, 0, -this.distance],\n      mat3.fromMat4(mat3.create(), this.matrix),\n    );\n    vec3.add(this.focalPoint, this.position, this.distanceVector);\n\n    // 视点变化，需要重新计算视距\n    this._getDistance();\n  }\n\n  /**\n   * 重新计算视距\n   */\n  private _getDistance() {\n    this.distanceVector = vec3.subtract(\n      vec3.create(),\n      this.focalPoint,\n      this.position,\n    );\n    this.distance = vec3.length(this.distanceVector);\n    this.dollyingStep = this.distance / 100;\n  }\n}\n"],"file":"Camera.js"}