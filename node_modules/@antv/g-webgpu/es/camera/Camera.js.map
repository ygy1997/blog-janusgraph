{"version":3,"sources":["../../src/camera/Camera.ts"],"names":["Frustum","IDENTIFIER","mat3","mat4","quat","vec3","vec4","inject","injectable","createVec3","getAngle","Landmark","CAMERA_TYPE","CAMERA_TRACKING_MODE","CAMERA_PROJECTION_MODE","DEG_2_RAD","Math","PI","RAD_2_DEG","Camera","InteractorService","matrix","create","right","fromValues","up","forward","position","focalPoint","distanceVector","distance","azimuth","elevation","roll","relAzimuth","relElevation","relRoll","dollyingStep","rotateWorld","fov","near","far","aspect","left","rright","top","bottom","zoom","perspective","view","following","undefined","type","EXPLORING","trackingMode","DEFAULT","projectionMode","PERSPECTIVE","frustum","landmarks","landmarkAnimationID","camera","setType","interactor","setWorldRotation","_getAngles","TRACKING","setTrackingMode","Error","flag","invert","_update","setPerspective","fullWidth","fullHeight","x","y","width","height","enabled","offsetX","offsetY","setOrthographic","l","r","t","b","ORTHOGRAPHIC","dx","dy","cx","cy","scaleW","scaleH","ortho","z","_setPosition","setFocalPoint","CINEMATIC","d","subtract","length","el","asin","az","atan2","m","rotateY","rotateX","transformMat4","lookAt","_getAxes","_getDistance","pos","n","f","setAzimuth","setElevation","rl","setRoll","computeMatrix","ORBITING","_getPosition","_getFocalPoint","angle","rotX","setAxisAngle","rotY","rotZ","rotQ","multiply","rotMatrix","fromQuat","translate","abs","tx","ty","coords","clone","add","scale","value","step","name","params","setPosition","landmark","push","duration","find","retrieve","window","cancelAnimationFrame","disconnect","destPosition","getPosition","destFocalPoint","getFocalPoint","destRoll","getRoll","timeStart","animate","timestamp","elapsed","cos","interFocalPoint","interPosition","interRoll","lerp","dist","connect","requestAnimationFrame","identity","copy","normalize","transformMat3","fromMat4"],"mappings":"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","sourcesContent":["import {\n  Frustum,\n  ICamera,\n  IDENTIFIER,\n  IInteractorService,\n} from '@antv/g-webgpu-core';\nimport { mat3, mat4, quat, vec3, vec4 } from 'gl-matrix';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { createVec3, getAngle } from '../utils/math';\nimport Landmark from './Landmark';\n\nexport enum CAMERA_TYPE {\n  ORBITING = 'ORBITING',\n  EXPLORING = 'EXPLORING',\n  TRACKING = 'TRACKING',\n}\n\nexport enum CAMERA_TRACKING_MODE {\n  DEFAULT = 'DEFAULT',\n  ROTATIONAL = 'ROTATIONAL',\n  TRANSLATIONAL = 'TRANSLATIONAL',\n  CINEMATIC = 'CINEMATIC',\n}\n\nexport enum CAMERA_PROJECTION_MODE {\n  ORTHOGRAPHIC = 'ORTHOGRAPHIC',\n  PERSPECTIVE = 'PERSPECTIVE',\n}\n\nconst DEG_2_RAD = Math.PI / 180;\nconst RAD_2_DEG = 180 / Math.PI;\n\n/**\n * 参考「WebGL Insights - 23.Designing Cameras for WebGL Applications」，基于 Responsible Camera 思路设计\n * 保存相机参数，定义相机动作：\n * 1. dolly 沿 n 轴移动\n * 2. pan 沿 u v 轴移动\n * 3. rotate 以方位角旋转\n * 4. 移动到 Landmark，具有平滑的动画效果，其间禁止其他用户交互\n */\n@injectable()\nexport class Camera implements ICamera {\n  /**\n   * 相机矩阵\n   */\n  public matrix = mat4.create();\n\n  /**\n   * u 轴\n   * @see http://learnwebgl.brown37.net/07_cameras/camera_introduction.html#a-camera-definition\n   */\n  public right = vec3.fromValues(1, 0, 0);\n\n  /**\n   * v 轴\n   */\n  public up = vec3.fromValues(0, 1, 0);\n\n  /**\n   * n 轴\n   */\n  public forward = vec3.fromValues(0, 0, 1);\n\n  /**\n   * 相机位置\n   */\n  public position = vec3.fromValues(0, 0, 1);\n\n  /**\n   * 视点位置\n   */\n  public focalPoint = vec3.fromValues(0, 0, 0);\n\n  /**\n   * 相机位置到视点向量\n   * focalPoint - position\n   */\n  public distanceVector = vec3.fromValues(0, 0, 0);\n\n  /**\n   * 相机位置到视点距离\n   * length(focalPoint - position)\n   */\n  public distance = 1;\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Azimuth\n   */\n  public azimuth = 0;\n  public elevation = 0;\n  public roll = 0;\n  public relAzimuth = 0;\n  public relElevation = 0;\n  public relRoll = 0;\n\n  /**\n   * 沿 n 轴移动时，保证移动速度从快到慢\n   */\n  public dollyingStep = 0;\n\n  /**\n   * invert the horizontal coordinate system HCS\n   */\n  public rotateWorld = false;\n\n  @inject(IDENTIFIER.InteractorService)\n  public interactor: IInteractorService;\n\n  /**\n   * 投影矩阵参数\n   */\n\n  /**\n   * field of view [0-360]\n   * @see http://en.wikipedia.org/wiki/Angle_of_view\n   */\n  private fov = 30;\n  private near = 0.1;\n  private far = 10000;\n  private aspect = 1;\n  private left: number;\n  private rright: number;\n  private top: number;\n  private bottom: number;\n  private zoom = 1;\n  private perspective = mat4.create();\n\n  private view:\n    | {\n        enabled: boolean;\n        fullWidth: number;\n        fullHeight: number;\n        offsetX: number;\n        offsetY: number;\n        width: number;\n        height: number;\n      }\n    | undefined;\n\n  private following = undefined;\n\n  private type = CAMERA_TYPE.EXPLORING;\n  private trackingMode = CAMERA_TRACKING_MODE.DEFAULT;\n  private projectionMode = CAMERA_PROJECTION_MODE.PERSPECTIVE;\n\n  /**\n   * for culling use\n   */\n  private frustum: Frustum = new Frustum();\n\n  /**\n   * switch between multiple landmarks\n   */\n  private landmarks: Landmark[] = [];\n  private landmarkAnimationID: number | undefined;\n\n  public clone(): Camera {\n    const camera = new Camera();\n    camera.setType(this.type, undefined);\n    camera.interactor = this.interactor;\n    return camera;\n  }\n\n  public getPerspective() {\n    return this.perspective;\n  }\n\n  public getFrustum() {\n    return this.frustum;\n  }\n\n  public getPosition() {\n    return this.position;\n  }\n\n  public setType(\n    type: CAMERA_TYPE,\n    trackingMode: CAMERA_TRACKING_MODE | undefined,\n  ) {\n    this.type = type;\n    if (this.type === CAMERA_TYPE.EXPLORING) {\n      this.setWorldRotation(true);\n    } else {\n      this.setWorldRotation(false);\n    }\n    this._getAngles();\n\n    if (this.type === CAMERA_TYPE.TRACKING && trackingMode !== undefined) {\n      this.setTrackingMode(trackingMode);\n    }\n    return this;\n  }\n\n  public setProjectionMode(projectionMode: CAMERA_PROJECTION_MODE) {\n    this.projectionMode = projectionMode;\n    return this;\n  }\n\n  public setTrackingMode(trackingMode: CAMERA_TRACKING_MODE) {\n    if (this.type !== CAMERA_TYPE.TRACKING) {\n      throw new Error(\n        'Impossible to set a tracking mode if the camera is not of tracking type',\n      );\n    }\n    this.trackingMode = trackingMode;\n    return this;\n  }\n\n  /**\n   * If flag is true, it reverses the azimuth and elevation angles.\n   * Subsequent calls to rotate, setAzimuth, setElevation,\n   * changeAzimuth or changeElevation will cause the inverted effect.\n   * setRoll or changeRoll is not affected by this method.\n   *\n   * This inversion is useful when one wants to simulate that the world\n   * is moving, instead of the camera.\n   *\n   * By default the camera angles are not reversed.\n   * @param {Boolean} flag the boolean flag to reverse the angles.\n   */\n  public setWorldRotation(flag: boolean) {\n    this.rotateWorld = flag;\n    this._getAngles();\n  }\n\n  /**\n   * 计算 MV 矩阵，为相机矩阵的逆矩阵\n   */\n  public getViewTransform(): mat4 {\n    return mat4.invert(mat4.create(), this.matrix)!;\n  }\n\n  /**\n   * 设置相机矩阵\n   */\n  public setMatrix(matrix: mat4) {\n    this.matrix = matrix;\n    this._update();\n    return this;\n  }\n\n  public setAspect(aspect: number) {\n    this.setPerspective(this.near, this.far, this.fov, aspect);\n    return this;\n  }\n\n  /**\n   * Sets an offset in a larger frustum, used in PixelPicking\n   */\n  public setViewOffset(\n    fullWidth: number,\n    fullHeight: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  ) {\n    this.aspect = fullWidth / fullHeight;\n    if (this.view === undefined) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1,\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n\n    if (this.projectionMode === CAMERA_PROJECTION_MODE.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(\n        this.left,\n        this.rright,\n        this.top,\n        this.bottom,\n        this.near,\n        this.far,\n      );\n    }\n    return this;\n  }\n\n  public clearViewOffset() {\n    if (this.view !== undefined) {\n      this.view.enabled = false;\n    }\n\n    if (this.projectionMode === CAMERA_PROJECTION_MODE.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(\n        this.left,\n        this.rright,\n        this.top,\n        this.bottom,\n        this.near,\n        this.far,\n      );\n    }\n    return this;\n  }\n\n  public setPerspective(\n    near: number,\n    far: number,\n    fov: number,\n    aspect: number,\n  ) {\n    this.projectionMode = CAMERA_PROJECTION_MODE.PERSPECTIVE;\n    this.fov = fov;\n    this.near = near;\n    this.far = far;\n    this.aspect = aspect;\n    mat4.perspective(\n      this.perspective,\n      this.fov * DEG_2_RAD,\n      this.aspect,\n      this.near,\n      this.far,\n    );\n    return this;\n  }\n\n  public setOrthographic(\n    l: number,\n    r: number,\n    t: number,\n    b: number,\n    near: number,\n    far: number,\n  ) {\n    this.projectionMode = CAMERA_PROJECTION_MODE.ORTHOGRAPHIC;\n    this.rright = r;\n    this.left = l;\n    this.top = t;\n    this.bottom = b;\n    this.near = near;\n    this.far = far;\n\n    const dx = (this.rright - this.left) / (2 * this.zoom);\n    const dy = (this.top - this.bottom) / (2 * this.zoom);\n    const cx = (this.rright + this.left) / 2;\n    const cy = (this.top + this.bottom) / 2;\n\n    let left = cx - dx;\n    let right = cx + dx;\n    let top = cy + dy;\n    let bottom = cy - dy;\n\n    if (this.view !== undefined && this.view.enabled) {\n      const scaleW =\n        (this.rright - this.left) / this.view.fullWidth / this.zoom;\n      const scaleH =\n        (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\n      left += scaleW * this.view.offsetX;\n      right = left + scaleW * this.view.width;\n      top -= scaleH * this.view.offsetY;\n      bottom = top - scaleH * this.view.height;\n    }\n\n    mat4.ortho(this.perspective, left, right, top, bottom, near, far);\n    return this;\n  }\n\n  /**\n   * 设置相机位置\n   */\n  public setPosition(x: number | vec3, y?: number, z?: number) {\n    this._setPosition(x, y, z);\n    this.setFocalPoint(this.focalPoint);\n    return this;\n  }\n\n  /**\n   * 设置视点位置\n   */\n  public setFocalPoint(x: number | vec3, y?: number, z?: number) {\n    let up = vec3.fromValues(0, 1, 0);\n    this.focalPoint = createVec3(x, y, z);\n\n    if (this.trackingMode === CAMERA_TRACKING_MODE.CINEMATIC) {\n      const d = vec3.subtract(vec3.create(), this.focalPoint, this.position);\n      x = d[0];\n      y = d[1] as number;\n      z = d[2] as number;\n      const r = vec3.length(d);\n      const el = Math.asin(y / r) * RAD_2_DEG;\n      const az = 90 + Math.atan2(z, x) * RAD_2_DEG;\n      const m = mat4.create();\n      mat4.rotateY(m, m, az * DEG_2_RAD);\n      mat4.rotateX(m, m, el * DEG_2_RAD);\n      up = vec3.transformMat4(vec3.create(), [0, 1, 0], m);\n    }\n\n    mat4.invert(\n      this.matrix,\n      mat4.lookAt(mat4.create(), this.position, this.focalPoint, up),\n    );\n\n    this._getAxes();\n    this._getDistance();\n    this._getAngles();\n    return this;\n  }\n\n  /**\n   * 固定当前视点，按指定距离放置相机\n   */\n  public setDistance(d: number) {\n    if (this.distance === d || d < 0) {\n      return;\n    }\n\n    this.distance = d;\n\n    if (this.distance < 0.0002) {\n      this.distance = 0.0002;\n    }\n    this.dollyingStep = this.distance / 100;\n\n    const pos = vec3.create();\n    d = this.distance;\n    const n = this.forward;\n    const f = this.focalPoint;\n\n    pos[0] = d * n[0] + f[0];\n    pos[1] = d * n[1] + f[1];\n    pos[2] = d * n[2] + f[2];\n\n    this._setPosition(pos);\n    return this;\n  }\n\n  /**\n   * Changes the initial azimuth of the camera\n   */\n  public changeAzimuth(az: number) {\n    this.setAzimuth(this.azimuth + az);\n    return this;\n  }\n\n  /**\n   * Changes the initial elevation of the camera\n   */\n  public changeElevation(el: number) {\n    this.setElevation(this.elevation + el);\n    return this;\n  }\n\n  /**\n   * Changes the initial roll of the camera\n   */\n  public changeRoll(rl: number) {\n    this.setRoll(this.roll + rl);\n    return this;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} el the azimuth in degrees\n   */\n  public setAzimuth(az: number) {\n    this.azimuth = getAngle(az);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  public getAzimuth() {\n    return this.azimuth;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} el the elevation in degrees\n   */\n  public setElevation(el: number) {\n    this.elevation = getAngle(el);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} angle the roll angle\n   */\n  public setRoll(angle: number) {\n    this.roll = getAngle(angle);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  /**\n   * Changes the azimuth and elevation with respect to the current camera axes\n   * @param {Number} azimuth the relative azimuth\n   * @param {Number} elevation the relative elevation\n   * @param {Number} roll the relative roll\n   */\n  public rotate(azimuth: number, elevation: number, roll: number) {\n    if (this.type === CAMERA_TYPE.EXPLORING) {\n      azimuth = getAngle(azimuth);\n      elevation = getAngle(elevation);\n      roll = getAngle(roll);\n\n      const rotX = quat.setAxisAngle(\n        quat.create(),\n        [1, 0, 0],\n        (this.rotateWorld ? 1 : -1) * elevation * DEG_2_RAD,\n      );\n      const rotY = quat.setAxisAngle(\n        quat.create(),\n        [0, 1, 0],\n        (this.rotateWorld ? 1 : -1) * azimuth * DEG_2_RAD,\n      );\n\n      const rotZ = quat.setAxisAngle(\n        quat.create(),\n        [0, 0, 1],\n        roll * DEG_2_RAD,\n      );\n      let rotQ = quat.multiply(quat.create(), rotY, rotX);\n      rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n      const rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n      mat4.translate(this.matrix, this.matrix, [0, 0, -this.distance]);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else {\n      if (Math.abs(this.elevation + elevation) > 90) {\n        return;\n      }\n      this.relElevation = getAngle(elevation);\n      this.relAzimuth = getAngle(azimuth);\n      this.relRoll = getAngle(roll);\n      this.elevation += this.relElevation;\n      this.azimuth += this.relAzimuth;\n      this.roll += this.relRoll;\n\n      this.computeMatrix();\n    }\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this._update();\n    return this;\n  }\n\n  /**\n   * 沿水平(right) & 垂直(up)平移相机\n   */\n  public pan(tx: number, ty: number) {\n    const coords = createVec3(tx, ty, 0);\n    const pos = vec3.clone(this.position);\n\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.right, coords[0]));\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.up, coords[1]));\n\n    this._setPosition(pos);\n\n    return this;\n  }\n\n  /**\n   * 沿 n 轴移动，当距离视点远时移动速度较快，离视点越近速度越慢\n   */\n  public dolly(value: number) {\n    const n = this.forward;\n    const pos = vec3.clone(this.position);\n    const step = value * this.dollyingStep;\n    pos[0] += step * n[0];\n    pos[1] += step * n[1];\n    pos[2] += step * n[2];\n\n    this._setPosition(pos);\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      // 重新计算视点距离\n      this._getDistance();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      // 保持视距，移动视点位置\n      vec3.add(this.focalPoint, pos, this.distanceVector);\n    }\n    return this;\n  }\n\n  public createLandmark(\n    name: string,\n    params: {\n      position: vec3;\n      focalPoint: vec3;\n      roll?: number;\n    },\n  ): Landmark {\n    const camera = this.clone();\n    camera.setPosition(params.position);\n    camera.setFocalPoint(params.focalPoint);\n    if (params.roll !== undefined) {\n      camera.setRoll(params.roll);\n    }\n    const landmark = new Landmark(name, camera);\n    this.landmarks.push(landmark);\n    return landmark;\n  }\n\n  public setLandmark(name: string) {\n    const landmark = new Landmark(name, this);\n    this.landmarks.push(landmark);\n    return this;\n  }\n\n  public gotoLandmark(name: string, duration: number = 1000) {\n    const landmark = this.landmarks.find((l) => l.name === name);\n    if (landmark) {\n      if (duration === 0) {\n        landmark.retrieve(this);\n        return;\n      }\n\n      if (this.landmarkAnimationID !== undefined) {\n        window.cancelAnimationFrame(this.landmarkAnimationID);\n      }\n\n      // TODO: do not process events during animation\n      this.interactor.disconnect();\n\n      const destPosition = landmark.getPosition();\n      const destFocalPoint = landmark.getFocalPoint();\n      const destRoll = landmark.getRoll();\n\n      let timeStart: number | undefined;\n      const animate = (timestamp: number) => {\n        if (timeStart === undefined) {\n          timeStart = timestamp;\n        }\n        const elapsed = timestamp - timeStart;\n        // TODO: use better ease function\n        const t = (1 - Math.cos((elapsed / duration) * Math.PI)) / 2;\n\n        const interFocalPoint = vec3.create();\n        const interPosition = vec3.create();\n        let interRoll = 0;\n\n        vec3.lerp(interFocalPoint, this.focalPoint, destFocalPoint, t);\n        vec3.lerp(interPosition, this.position, destPosition, t);\n        interRoll = this.roll * (1 - t) + destRoll * t;\n\n        this.setFocalPoint(interFocalPoint);\n        this.setPosition(interPosition);\n        this.setRoll(interRoll);\n        this.computeMatrix();\n\n        const dist =\n          vec3.dist(interFocalPoint, destFocalPoint) +\n          vec3.dist(interPosition, destPosition);\n        if (dist > 0.01) {\n          //\n        } else {\n          this.setFocalPoint(interFocalPoint);\n          this.setPosition(interPosition);\n          this.setRoll(interRoll);\n          this.computeMatrix();\n          this.interactor.connect();\n          return;\n        }\n\n        if (elapsed < duration) {\n          this.landmarkAnimationID = window.requestAnimationFrame(animate);\n        }\n      };\n\n      window.requestAnimationFrame(animate);\n    }\n  }\n\n  /**\n   * 根据相机矩阵重新计算各种相机参数\n   */\n  private _update() {\n    this._getAxes();\n    this._getPosition();\n    this._getDistance();\n    this._getAngles();\n  }\n\n  /**\n   * 计算相机矩阵\n   */\n  private computeMatrix() {\n    let rotX;\n    let rotY;\n    // 使用四元数描述 3D 旋转\n    // @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n    const rotZ = quat.setAxisAngle(\n      quat.create(),\n      [0, 0, 1],\n      this.roll * DEG_2_RAD,\n    );\n\n    mat4.identity(this.matrix);\n\n    // only consider HCS for EXPLORING and ORBITING cameras\n    rotX = quat.setAxisAngle(\n      quat.create(),\n      [1, 0, 0],\n      ((this.rotateWorld && this.type !== CAMERA_TYPE.TRACKING) ||\n      this.type === CAMERA_TYPE.TRACKING\n        ? 1\n        : -1) *\n        this.elevation *\n        DEG_2_RAD,\n    );\n    rotY = quat.setAxisAngle(\n      quat.create(),\n      [0, 1, 0],\n      ((this.rotateWorld && this.type !== CAMERA_TYPE.TRACKING) ||\n      this.type === CAMERA_TYPE.TRACKING\n        ? 1\n        : -1) *\n        this.azimuth *\n        DEG_2_RAD,\n    );\n\n    let rotQ = quat.multiply(quat.create(), rotY, rotX);\n    rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n    const rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      mat4.translate(this.matrix, this.matrix, this.focalPoint);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      mat4.translate(this.matrix, this.matrix, this.position);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n    }\n  }\n\n  /**\n   * Sets the camera position in the camera matrix\n   */\n  private _setPosition(x: number | vec3, y?: number, z?: number) {\n    this.position = createVec3(x, y, z);\n    const m = this.matrix;\n    m[12] = this.position[0];\n    m[13] = this.position[1];\n    m[14] = this.position[2];\n    m[15] = 1;\n  }\n\n  /**\n   * Recalculates axes based on the current matrix\n   */\n  private _getAxes() {\n    vec3.copy(\n      this.right,\n      createVec3(vec4.transformMat4(vec4.create(), [1, 0, 0, 0], this.matrix)),\n    );\n    vec3.copy(\n      this.up,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 1, 0, 0], this.matrix)),\n    );\n    vec3.copy(\n      this.forward,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 0, 1, 0], this.matrix)),\n    );\n    vec3.normalize(this.right, this.right);\n    vec3.normalize(this.up, this.up);\n    vec3.normalize(this.forward, this.forward);\n  }\n\n  /**\n   * Recalculates euler angles based on the current state\n   */\n  private _getAngles() {\n    // Recalculates angles\n    const x = this.distanceVector[0];\n    const y = this.distanceVector[1];\n    const z = this.distanceVector[2];\n    const r = vec3.length(this.distanceVector);\n\n    // FAST FAIL: If there is no distance we cannot compute angles\n    if (r === 0) {\n      this.elevation = 0;\n      this.azimuth = 0;\n      return;\n    }\n\n    if (this.type === CAMERA_TYPE.TRACKING) {\n      this.elevation = Math.asin(y / r) * RAD_2_DEG;\n      this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n    } else {\n      if (this.rotateWorld) {\n        this.elevation = Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n      } else {\n        this.elevation = -Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = -Math.atan2(-x, -z) * RAD_2_DEG;\n      }\n    }\n  }\n\n  /**\n   * 重新计算相机位置，只有 ORBITING 模式相机位置才会发生变化\n   */\n  private _getPosition() {\n    vec3.copy(\n      this.position,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 0, 0, 1], this.matrix)),\n    );\n\n    // 相机位置变化，需要重新计算视距\n    this._getDistance();\n  }\n\n  /**\n   * 重新计算视点，只有 TRACKING 模式视点才会发生变化\n   */\n  private _getFocalPoint() {\n    vec3.transformMat3(\n      this.distanceVector,\n      [0, 0, -this.distance],\n      mat3.fromMat4(mat3.create(), this.matrix),\n    );\n    vec3.add(this.focalPoint, this.position, this.distanceVector);\n\n    // 视点变化，需要重新计算视距\n    this._getDistance();\n  }\n\n  /**\n   * 重新计算视距\n   */\n  private _getDistance() {\n    this.distanceVector = vec3.subtract(\n      vec3.create(),\n      this.focalPoint,\n      this.position,\n    );\n    this.distance = vec3.length(this.distanceVector);\n    this.dollyingStep = this.distance / 100;\n  }\n}\n"],"file":"Camera.js"}