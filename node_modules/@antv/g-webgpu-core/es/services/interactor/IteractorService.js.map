{"version":3,"sources":["../../../src/services/interactor/IteractorService.ts"],"names":["injectable","InteractorService","canvas","event","args"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,WAA3B;AAIA,WAAaC,iBAAb,WADCD,UAAU,EACX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2BACgBE,MADhB,EACiD,CAAE;AADnD;AAAA;AAAA,uBAEYC,KAFZ,EAEqCC,IAFrC,EAE2D,CAAE;AAF7D;AAAA;AAAA,8BAGmB,CAAE;AAHrB;AAAA;AAAA,iCAIsB,CAAE;AAJxB;AAAA;AAAA,8BAKmB,CAAE;AALrB;;AAAA;AAAA","sourcesContent":["import { injectable } from 'inversify';\nimport { IInteractorEvent, IInteractorService } from './IIteractorService';\n\n@injectable()\nexport class InteractorService implements IInteractorService {\n  public listen(canvas: HTMLCanvasElement): void {}\n  public on(event: IInteractorEvent, args?: unknown): void {}\n  public connect() {}\n  public disconnect() {}\n  public destroy() {}\n}\n"],"file":"IteractorService.js"}