{"version":3,"sources":["../../../src/components/compute/IComputeStrategy.ts"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import { GLSLContext } from '@antv/g-webgpu-compiler';\n// import { ComputeComponent } from './ComputeComponent';\n\n// export interface IComputeStrategy {\n//   component: ComputeComponent;\n\n//   /**\n//    * create binding group, buffers\n//    */\n//   init(context: GLSLContext): void;\n\n//   /**\n//    * dispatch with different frequencies\n//    */\n//   run(): Promise<void>;\n\n//   /**\n//    *\n//    */\n//   getGPUBuffer(): GPUBuffer;\n\n//   /**\n//    *\n//    */\n//   getBindingGroup(): GPUBindGroup;\n\n//   /**\n//    * 通过名称更新 uniform\n//    */\n//   updateUniformGPUBuffer(\n//     uniformName: string,\n//     data:\n//       | number\n//       | number[]\n//       | Float32Array\n//       | Uint8Array\n//       | Uint16Array\n//       | Uint32Array\n//       | Int8Array\n//       | Int16Array\n//       | Int32Array,\n//   ): void;\n\n//   /**\n//    * destroy used GPUBuffer(s)\n//    */\n//   destroy(): void;\n// }\n"],"file":"IComputeStrategy.js"}