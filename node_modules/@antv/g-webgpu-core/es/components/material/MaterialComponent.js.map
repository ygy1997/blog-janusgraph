{"version":3,"sources":["../../../src/components/material/MaterialComponent.ts"],"names":["Component","gl","MaterialComponent","data","vertexShaderGLSL","fragmentShaderGLSL","dirty","uniforms","cull","enable","face","BACK","depth","blend","Object","assign","name","keys","forEach","key","setUniform","existedUniform","find","u","push"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,EAApB,QAA8B,OAA9B;AAMA,WAAaC,iBAAb;AAAA;;AAAA;;AAoBE,6BAAYC,IAAZ,EAAqE;AAAA;;AAAA;;AACnE,8BAAMA,IAAN;AADmE,UAnB9DC,gBAmB8D;AAAA,UAjB9DC,kBAiB8D;AAAA,UAf9DC,KAe8D,GAftD,IAesD;AAAA,UAb9DC,QAa8D,GAbhC,EAagC;AAAA,UAX9DC,IAW8D,GAXlB;AACjDC,MAAAA,MAAM,EAAE,IADyC;AAEjDC,MAAAA,IAAI,EAAET,EAAE,CAACU;AAFwC,KAWkB;AAAA,UAN9DC,KAM8D,GANhB;AACnDH,MAAAA,MAAM,EAAE;AAD2C,KAMgB;AAAA,UAF9DI,KAE8D;AAGnEC,IAAAA,MAAM,CAACC,MAAP,gCAAoBZ,IAApB;AAHmE;AAIpE;;AAxBH;AAAA;AAAA,4BA0BiBK,IA1BjB,EA0B4D;AACxD,WAAKA,IAAL,GAAYA,IAAZ;AACA,aAAO,IAAP;AACD;AA7BH;AAAA;AAAA,6BA+BkBI,KA/BlB,EA+B+D;AAC3D,WAAKA,KAAL,GAAaA,KAAb;AACA,aAAO,IAAP;AACD;AAlCH;AAAA;AAAA,6BAoCkBC,KApClB,EAoC+D;AAC3D,WAAKA,KAAL,GAAaA,KAAb;AACA,aAAO,IAAP;AACD;AAvCH;AAAA;AAAA,+BA0CIG,IA1CJ,EA2CIb,IA3CJ,EA4CI;AAAA;;AACA,UAAI,OAAOa,IAAP,KAAgB,QAApB,EAA8B;AAC5BF,QAAAA,MAAM,CAACG,IAAP,CAAYD,IAAZ,EAAkBE,OAAlB,CAA0B,UAACC,GAAD;AAAA,iBAAS,MAAI,CAACC,UAAL,CAAgBD,GAAhB,EAAqBH,IAAI,CAACG,GAAD,CAAzB,CAAT;AAAA,SAA1B;AACA,eAAO,IAAP;AACD;;AAED,UAAME,cAAc,GAAG,KAAKd,QAAL,CAAce,IAAd,CAAmB,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACP,IAAF,KAAWA,IAAlB;AAAA,OAAnB,CAAvB;;AACA,UAAI,CAACK,cAAL,EAAqB;AACnB,aAAKd,QAAL,CAAciB,IAAd,CAAmB;AACjBR,UAAAA,IAAI,EAAJA,IADiB;AAEjBV,UAAAA,KAAK,EAAE,IAFU;AAGjBH,UAAAA,IAAI,EAAEA;AAHW,SAAnB;AAKD,OAND,MAMO;AACLkB,QAAAA,cAAc,CAACf,KAAf,GAAuB,IAAvB;AACAe,QAAAA,cAAc,CAAClB,IAAf,GAAsBA,IAAtB;AACD;;AAED,WAAKG,KAAL,GAAa,IAAb;AACA,aAAO,IAAP;AACD;AAhEH;;AAAA;AAAA,EAAuCN,SAAvC","sourcesContent":["import { Component, gl } from '../..';\nimport { NonFunctionProperties } from '../../ComponentManager';\nimport { IModelInitializationOptions } from '../renderer/IModel';\nimport { BufferData } from '../renderer/IRendererService';\nimport { IUniformBinding } from './interface';\n\nexport class MaterialComponent extends Component<MaterialComponent> {\n  public vertexShaderGLSL: string;\n\n  public fragmentShaderGLSL: string;\n\n  public dirty = true;\n\n  public uniforms: IUniformBinding[] = [];\n\n  public cull: IModelInitializationOptions['cull'] = {\n    enable: true,\n    face: gl.BACK,\n  };\n\n  public depth: IModelInitializationOptions['depth'] = {\n    enable: true,\n  };\n\n  public blend: IModelInitializationOptions['blend'];\n\n  constructor(data: Partial<NonFunctionProperties<MaterialComponent>>) {\n    super(data);\n\n    Object.assign(this, data);\n  }\n\n  public setCull(cull: IModelInitializationOptions['cull']) {\n    this.cull = cull;\n    return this;\n  }\n\n  public setDepth(depth: IModelInitializationOptions['depth']) {\n    this.depth = depth;\n    return this;\n  }\n\n  public setBlend(blend: IModelInitializationOptions['blend']) {\n    this.blend = blend;\n    return this;\n  }\n\n  public setUniform(\n    name: string | Record<string, BufferData>,\n    data?: BufferData,\n  ) {\n    if (typeof name !== 'string') {\n      Object.keys(name).forEach((key) => this.setUniform(key, name[key]));\n      return this;\n    }\n\n    const existedUniform = this.uniforms.find((u) => u.name === name);\n    if (!existedUniform) {\n      this.uniforms.push({\n        name,\n        dirty: true,\n        data: data!,\n      });\n    } else {\n      existedUniform.dirty = true;\n      existedUniform.data = data!;\n    }\n\n    this.dirty = true;\n    return this;\n  }\n}\n"],"file":"MaterialComponent.js"}