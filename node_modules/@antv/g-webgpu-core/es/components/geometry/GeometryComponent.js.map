{"version":3,"sources":["../../../src/components/geometry/GeometryComponent.ts"],"names":["Component","GeometryComponent","data","dirty","attributes","indices","indicesBuffer","vertexCount","maxInstancedCount","aabb","Object","assign","name","descriptor","bufferGetter","existed","find","a","push","Uint32Array","buffer"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAOA,WAAaC,iBAAb;AAAA;;AAAA;;AAmBE;AAKA,6BAAYC,IAAZ,EAAqE;AAAA;;AAAA;;AACnE,8BAAMA,IAAN;AADmE,UAvB9DC,KAuB8D,GAvB7C,IAuB6C;AAAA,UArB9DC,UAqB8D,GAZjE,EAYiE;AAAA,UAV9DC,OAU8D;AAAA,UAT9DC,aAS8D;AAAA,UAP9DC,WAO8D;AAAA,UAJ9DC,iBAI8D;AAAA,UAF9DC,IAE8D;AAGnEC,IAAAA,MAAM,CAACC,MAAP,gCAAoBT,IAApB;AAHmE;AAIpE;AAED;AACF;AACA;;;AAhCA;AAAA;AAAA,iCAkCIU,IAlCJ,EAmCIV,IAnCJ,EAoCIW,UApCJ,EAqCIC,YArCJ,EAsCI;AACA,UAAMC,OAAO,GAAG,KAAKX,UAAL,CAAgBY,IAAhB,CAAqB,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACL,IAAF,KAAWA,IAAlB;AAAA,OAArB,CAAhB;;AACA,UAAI,CAACG,OAAL,EAAc;AACZ,aAAKX,UAAL,CAAgBc,IAAhB;AACEf,UAAAA,KAAK,EAAE,IADT;AAEES,UAAAA,IAAI,EAAJA,IAFF;AAGEV,UAAAA,IAAI,EAAJA;AAHF,WAIKW,UAJL;AAKEC,UAAAA,YAAY,EAAZA;AALF;AAOD,OARD,MAQO;AACLC,QAAAA,OAAO,CAACb,IAAR,GAAeA,IAAf;AACAa,QAAAA,OAAO,CAACZ,KAAR,GAAgB,IAAhB;AACD;;AACD,WAAKA,KAAL,GAAa,IAAb;AACA,aAAO,IAAP;AACD;AAtDH;AAAA;AAAA,6BAwDkBD,IAxDlB,EAwD2E;AACvE,WAAKG,OAAL,GAAe,IAAIc,WAAJ,EACb;AACAjB,MAAAA,IAAI,CAACkB,MAAL,GAAclB,IAAI,CAACkB,MAAnB,GAA6BlB,IAFhB,CAAf;AAIA,WAAKC,KAAL,GAAa,IAAb;AACA,aAAO,IAAP;AACD;AA/DH;;AAAA;AAAA,EAAuCH,SAAvC","sourcesContent":["import { Component } from '../..';\nimport { NonFunctionProperties } from '../../ComponentManager';\nimport { AABB } from '../../shape/AABB';\nimport { IBuffer } from '../renderer/IBuffer';\nimport { IElements } from '../renderer/IElements';\nimport { BufferData } from '../renderer/IRendererService';\n\nexport class GeometryComponent extends Component<GeometryComponent> {\n  public dirty: boolean = true;\n\n  public attributes: Array<\n    {\n      dirty: boolean;\n      name: string;\n      data?: BufferData;\n      buffer?: IBuffer;\n      // 结合 Compute Pipeline 时，需要在运行时获取 PingPong buffer\n      bufferGetter?: () => IBuffer;\n    } & GPUVertexBufferLayoutDescriptor\n  > = [];\n\n  public indices: Uint32Array | null;\n  public indicesBuffer: IElements | null;\n\n  public vertexCount: number;\n\n  // instanced count\n  public maxInstancedCount: number;\n\n  public aabb: AABB;\n\n  constructor(data: Partial<NonFunctionProperties<GeometryComponent>>) {\n    super(data);\n\n    Object.assign(this, data);\n  }\n\n  /**\n   * @see https://threejs.org/docs/#api/en/core/BufferAttribute\n   */\n  public setAttribute(\n    name: string,\n    data: BufferData,\n    descriptor: GPUVertexBufferLayoutDescriptor,\n    bufferGetter?: () => IBuffer,\n  ) {\n    const existed = this.attributes.find((a) => a.name === name);\n    if (!existed) {\n      this.attributes.push({\n        dirty: true,\n        name,\n        data,\n        ...descriptor,\n        bufferGetter,\n      });\n    } else {\n      existed.data = data;\n      existed.dirty = true;\n    }\n    this.dirty = true;\n    return this;\n  }\n\n  public setIndex(data: number[] | Uint8Array | Uint16Array | Uint32Array) {\n    this.indices = new Uint32Array(\n      // @ts-ignore\n      data.buffer ? data.buffer : (data as number[]),\n    );\n    this.dirty = true;\n    return this;\n  }\n}\n"],"file":"GeometryComponent.js"}